h1. Sibilant

Sibilant is a language that is parsed by javascript and compiles to javascript.
Sibilant is inspired by lisp and follows many lisp conventions, although it is still relatively close to the underlying javascript.
Macros can be defined in sibilant and included at compile time.
Sibilant is entirely written in sibilant and can recompile itself.

h2. Try it before you install

"sibilantjs.info":http://sibilantjs.info includes an in-browser as-you-type sibilant compiler and tutorial, so you can get a sense of the language without leaving your browser.

Note that the tutorial is for "upstream sibilant":https://github.com/jbr/sibilant, not the evanrmurphy fork.

h2. Installation

First, install "node.js":http://nodejs.org [ "github":http://github.com/ry/node ] and "npm":http://npmjs.org [ "github":http://github.com/isaacs/npm ].

@$ npm install sibilant@

h2. CLI

<pre><code>
-v / --version         Print out a version string and exit

-h / --help            This message

--repl / [no args]     Sibilant interactive command prompt

--execute / -x         This is a flag. Execute input files in order supplied.

--eval [optional STRING] / -e [optional STRING]
                       Evaluate STR if provided, otherwise evaluate standard in.

--output DIR / -o DIR  Output input files to this dir, replacing .lisp with .js.

--input FILE / -i FILE / FILE
                       Add this file to the input files. If the execute flag is
                       set, input files will be executed.  If an output dir is
                       specified, each file will be written to that dir.
                       Otherwise, each file will be written to STDOUT.

To pass arguments to an executed file, append them after a "--", as follows:
$ sibilant -x myfile.lisp -- --arg-for-my-program=stuff

myfile.lisp will see process.argv as
[ 'sibilant', 'myfile.lisp', '--arg-for-my-program=stuff' ]

</code></pre>

h3. CLI Examples

h4. To compile sibilant

<pre><code>
$ git clone git://github.com/jbr/sibilant.git
$ cd sibilant
$ npm link .
$ sibilant src/*.lisp -o lib
$ sibilant -x test/test.lisp # you're now running a sibilant you just compiled.
</code></pre>

h4. To compile one file to stdout

@$ sibilant test/test.lisp@

h4. To compile a file to a directory

@$ sibilant test/test.lisp -o . # put test.js here@ or @$ sibilant --input test/test.lisp --output .@

h4. To run a file

@$ sibilant -x test/test.lisp@

h4. To enter the repl

@$ sibilant@ or @$ sibilant --repl@
